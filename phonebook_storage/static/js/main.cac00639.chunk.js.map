{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Section/Section.module.css","components/Notification/Notification.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Section/Section.jsx","components/App.js","helpers/helpers.js","index.js"],"names":["module","exports","Notification","message","ContactList","contacts","onDeleteContact","className","styles","statistics","map","id","name","phone","key","type","onClick","ContactForm","onSubmit","useState","setName","setPhone","handleChange","target","value","contactForm","e","preventDefault","contact","uuidv4","label","placeholder","onChange","submit","Filter","filter","onChangeFilter","Section","title","children","section","App","useEffect","phoneBookContacts","JSON","parse","localStorage","getItem","setContacts","setFilter","visibleContacts","toLowerCase","includes","getVisibleContacts","newContactName","find","alert","setItem","stringify","length","deleteId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cac00639.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__OrlO3\",\"label\":\"ContactForm_label__378f8\",\"submit\":\"ContactForm_submit__ChZTI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactList.module.css';\n\nexport const ContactList = ({ contacts = [], onDeleteContact }) => (\n  <ul className={styles.statistics}>\n    {contacts.map(({ id, name, phone }) => (\n      <li key={id}>\n        <div>\n          <p>\n            {name}: {phone}\n          </p>\n        </div>\n        <button type=\"button\" onClick={() => onDeleteContact(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactForm.module.css';\n\nexport const ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    if (name === 'name') setName(value);\n    if (name === 'phone') setPhone(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name,\n      phone,\n    };\n    if (name && phone) {\n      onSubmit(contact);\n      setName('');\n      setPhone('');\n    }\n  };\n  return (\n    <form className={styles.contactForm} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={styles.label}>\n        Phone\n        <input\n          name=\"phone\"\n          type=\"tel\"\n          placeholder=\"Enter phone\"\n          value={phone}\n          onChange={handleChange}\n        />\n      </label>\n\n      <button className={styles.submit} type=\"submit\">\n        add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Filter = ({ filter, onChangeFilter }) => {\n  const handleChange = ({ target }) => {\n    const { value } = target;\n    onChangeFilter(value);\n  };\n  return (\n    <input\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      placeholder=\"Find contacts by name...\"\n      onChange={handleChange}\n    />\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Section.module.css';\n\nexport const Section = ({ title, children }) => (\n  <section className={styles.section}>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { Notification } from './Notification/Notification';\nimport { ContactList } from './ContactList/ContactList';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { Filter } from './Filter/Filter';\nimport { Section } from './Section/Section';\n\nimport { getVisibleContacts } from '../helpers/helpers';\n\nimport './App.css';\n\nfunction App() {\n  // imitation componentDidMount - condition from home task\n  useEffect(() => {\n    const phoneBookContacts = JSON.parse(localStorage.getItem('contacts'));\n    phoneBookContacts && setContacts(phoneBookContacts);\n  }, []);\n\n  const [contacts, setContacts] = useState([]);\n\n  const handleSubmit = contact => {\n    const newContactName = contact.name;\n    const sameName = contacts.find(({ name }) => name === newContactName);\n    sameName\n      ? alert(`${newContactName} is already in contacts`)\n      : setContacts(contacts => {\n          localStorage.setItem(\n            'contacts',\n            JSON.stringify([contact, ...contacts]),\n          );\n          return [contact, ...contacts];\n        });\n  };\n\n  const handleDeleteContact = deleteId =>\n    setContacts(contacts => {\n      const filter = contacts.filter(({ id }) => id !== deleteId);\n      localStorage.setItem('contacts', JSON.stringify(filter));\n      return filter;\n    });\n\n  const [filter, setFilter] = useState('');\n\n  const handleChangeFilter = value => setFilter(value);\n\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Add Contact\">\n        <ContactForm onSubmit={handleSubmit} />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter filter={filter} onChangeFilter={handleChangeFilter} />\n        {contacts.length ? (\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={handleDeleteContact}\n          />\n        ) : (\n          <Notification message=\"No contacts yet\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","export const getVisibleContacts = (contacts, filter) =>\n  contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}