{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/App.js","index.js"],"names":["module","exports","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","className","styles","statistics","FeedbackOptions","options","onLeaveFeedback","feedback_buttons","map","id","text","btn","type","key","onClick","Section","title","children","App","useState","setGood","setNeutral","setBad","totalValue","value","parseFloat","toFixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,iBAAmB,0CAA0C,IAAM,+B,4SCExEC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,I,gBCEpCC,EAAa,SAAC,GAAD,IACxBC,EADwB,EACxBA,KACAC,EAFwB,EAExBA,QACAC,EAHwB,EAGxBA,IACAC,EAJwB,EAIxBA,MACAC,EALwB,EAKxBA,mBALwB,OAOxB,6BAASC,UAAWC,IAAOC,YACzB,oCAAUP,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,O,gBCZSI,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OAC7B,yBAAKL,UAAWC,IAAOK,kBACpBF,EAAQG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACX,4BACET,UAAWC,IAAOS,IAClBC,KAAK,SACLC,IAAKJ,EACLK,QAAS,kBAAMR,EAAgBG,KAE9BC,Q,gBCTIK,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACrB,yBAAKhB,UAAWC,IAAOc,OACrB,4BAAKA,GACJC,I,aCiDUC,MA9Cf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNvB,EADM,KACAwB,EADA,OAGiBD,mBAAS,GAH1B,mBAGNtB,EAHM,KAGGwB,EAHH,OAKSF,mBAAS,GALlB,mBAKNrB,EALM,KAKDwB,EALC,KAaPC,EAAa,kBAAM3B,EAAOC,EAAUC,GAQ1C,OACE,yBAAKG,UAAU,OACb,kBAAC,EAAD,CAASe,MAAM,yBACb,kBAAC,EAAD,CACEX,QAASA,EACTC,gBAnBoB,SAAAG,GACf,IAAPA,GAAUW,GAAQ,SAAAI,GAAK,OAAIA,EAAQ,KAC5B,IAAPf,GAAUY,GAAW,SAAAG,GAAK,OAAIA,EAAQ,KAC/B,IAAPf,GAAUa,GAAO,SAAAE,GAAK,OAAIA,EAAQ,SAmBpC,kBAAC,EAAD,CAASR,MAAM,cACZO,IACC,kBAAC,EAAD,CACE3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,IACPvB,mBAlBDyB,YADiB,IAAP7B,GADHA,EAAOC,EAAUC,IAEL4B,QAAQ,KAAO,IAqBnC,kBAAC,EAAD,CAAchC,QAAQ,yB,MC5ChCiC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.667f481c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback_buttons\":\"FeedbackOptions_feedback_buttons__et_Pf\",\"btn\":\"FeedbackOptions_btn__1rp9P\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Statistics.module.css';\n\nexport const Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) => (\n  <section className={styles.statistics}>\n    <p>Good: {good}</p>\n    <p>Teutral: {neutral}</p>\n    <p>Bad: {bad}</p>\n    <p>Total: {total}</p>\n    <p>Positive Feedback: {positivePercentage}%</p>\n  </section>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './FeedbackOptions.module.css';\n\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <div className={styles.feedback_buttons}>\n    {options.map(({ id, text }) => (\n      <button\n        className={styles.btn}\n        type=\"button\"\n        key={id}\n        onClick={() => onLeaveFeedback(id)}\n      >\n        {text}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func,\n  stats: PropTypes.shape({\n    id: PropTypes.number,\n    text: PropTypes.string,\n  }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Section.module.css';\n\nexport const Section = ({ title, children }) => (\n  <div className={styles.title}>\n    <h2>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import React, { useState } from 'react';\n\nimport { Notification } from './Notification/Notification';\nimport { Statistics } from './Statistics/Statistics';\nimport { FeedbackOptions } from './FeedbackOptions/FeedbackOptions';\nimport { Section } from './Section/Section';\n\nimport options from './data/options.json';\n\nimport './App.css';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n\n  const [neutral, setNeutral] = useState(0);\n\n  const [bad, setBad] = useState(0);\n\n  const handleLeaveFeedback = id => {\n    if (id === 1) setGood(value => value + 1);\n    if (id === 2) setNeutral(value => value + 1);\n    if (id === 3) setBad(value => value + 1);\n  };\n\n  const totalValue = () => good + neutral + bad;\n\n  const positivePercentage = () => {\n    const total = good + neutral + bad;\n    const percent = (good * 100) / total;\n    return parseFloat(percent.toFixed(1)) || 0;\n  };\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Pleace leave feedback\">\n        <FeedbackOptions\n          options={options}\n          onLeaveFeedback={handleLeaveFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {totalValue() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalValue()}\n            positivePercentage={positivePercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}